version: '3.8'

services:
    nginx:
        container_name: nginx
        build: nginx
        image: nginx:latest
        ports: 
            - 80:80
        volumes:
            - ./nginx:/etc/nginx/
        depends_on: 
            - web

    web:
        container_name: web
        build: 
            context: ./web
            dockerfile: Dockerfile
        image: web:latest
        command: bash -c "sleep 100 && python manage.py runserver 0.0.0.0:8080"
        ports: 
            - 8080:8000
        volumes: 
            - ./web:/app
        depends_on: 
            - account-api
            - auth-api

    account-api:
        container_name: account-api
        build:
            context: ./account_service
            dockerfile: Dockerfile
        image: account-api:latest
        command: bash -c "sleep 90 && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        volumes:
            - ./account_service:/app
        depends_on:
            - account-db

    account-db:
        container_name: account-db
        image: mysql:5.7.22
        restart: always
        environment: 
            MYSQL_DATABASE: account
            MYSQL_ROOT_PASSWORD: root
        volumes: 
            - .account_db_data:/var/lib/mysql
        ports: 
            - 3307:3306

    auth-api:
        container_name: auth-api
        build:
            context: ./authentication_service
            dockerfile: Dockerfile
        image: auth-api:latest
        command: bash -c "sleep 90 && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        volumes:
            - ./authentication_service:/app
        depends_on: 
            - auth-db

    auth-db:
        container_name: auth-db
        image: postgres:12
        restart: always
        environment:
          POSTGRES_PASSWORD: postgres
        volumes:
            - .auth_db_data:/var/lib/postgresql/data
